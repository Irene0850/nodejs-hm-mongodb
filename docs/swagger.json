{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Contacts App",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of contacts app"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://nodejs-hm-mongodb-11.onrender.com/"
    }
  ],
  "tags": [
    {
      "name": "Contacts",
      "description": "Operations about contacts."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    }
  ],
  "paths": {
    "/contacts/{contactId}": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Get contact by id",
        "operationId": "getContactsById",
        "description": "Get contact by unique identifier",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "66cd9ba4d5083f3fe0869262"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get contact by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contact with id 66cd9ba4d5083f3fe0869262!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "patch": {
        "tags": ["Contacts"],
        "summary": "Patch contact by id",
        "operationId": "updateContact",
        "description": "Patch contact by unique identifier",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId",
              "example": "66cd9ba4d5083f3fe0869262"
            },
            "description": "The ID of the contact to update"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The name of the contact",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "phoneNumber": {
                    "description": "The phone number of the contact",
                    "type": "string",
                    "example": "123-456-7890"
                  },
                  "isFavorite": {
                    "description": "Indicates whether the contact is marked as a favorite",
                    "type": "boolean",
                    "example": true
                  },
                  "email": {
                    "description": "The email of the contact",
                    "type": "string",
                    "example": "johndoe@gmail.com",
                    "default": false
                  },
                  "contactType": {
                    "description": "Specifies the type of contact",
                    "type": "string",
                    "enum": ["work", "home", "personal"],
                    "example": "work",
                    "default": "personal"
                  },
                  "photo": {
                    "description": "The photo of the contact",
                    "type": "string",
                    "format": "binary"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "description": "Fields to be updated for the contact."
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully patched contact with id 66cd9ba4d5083f3fe0869262!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": ["Contacts"],
        "summary": "Delete contact by id",
        "operationId": "deleteContact",
        "description": "Delete contact by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "66cddde3d7761b10c10865c9"
            },
            "description": "The ID of the contact to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation - No Content. The contact was deleted successfully."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "/contacts": {
        "get": {
          "$ref": "../swagger/paths/contacts/get.yaml"
        },
        "post": {
          "$ref": "../swagger/paths/contacts/post.yaml"
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "contact": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["status", "message"],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "An unexpected error occurred."
                }
              }
            }
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "Bad request, invalid input data.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["status", "message"],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Invalid input data. Please check the request body."
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["status", "message", "data"],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Contact not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["status", "message", "data"],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Not found"
                },
                "data": {
                  "type": "object",
                  "example": {}
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["status", "message"],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "An unexpected error occurred."
                }
              }
            }
          }
        }
      }
    }
  }
}
